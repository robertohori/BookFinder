{"version":3,"sources":["rootReducer.js","screens/home/reducers.js","screens/home/actionTypes.js","configureStore.js","components/Header.js","components/Footer.js","screens/home/components/BookList.js","components/Pagination.js","screens/home/actions.js","screens/home/containers/Books.js","screens/home/index.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["history","initalState","query","isFetching","data","error","books","state","arguments","length","undefined","action","type","Object","assign","status","payload","createHashHistory","store","createStore","combineReducers","router","connectRouter","composeWithDevTools","applyMiddleware","routerMiddleware","thunk","Header","react_default","a","createElement","id","Navbar","bg","expand","Brand","href","Footer","aria-label","Date","getFullYear","BookList","_ref","docs","className","data-testid","map","book","key","cover_i","src","concat","alt","width","title","author_name","publish_date","date","i","dist_default","format","PaginationComponent","totalRegister","callBackCurrentPage","currentpage","childFunc","React","useEffect","current","updateCurrentPage","props","startPages","setcurrentPage","page","_useState","useState","_useState2","slicedToArray","currentPage","_useState3","itemsPerPage","_useState5","pageNumberLimit","_useState7","_useState8","maxPageNumberLimit","setmaxPageNumberLimit","_useState9","_useState10","minPageNumberLimit","setminPageNumberLimit","handleClick","event","Number","target","pages","Math","ceil","push","renderPageNumbers","number","aria-current","onClick","pageIncrementBtn","pageDecrementBtn","Fragment","role","receiveBooks","getBooks","_ref2","sort","qtdPage","dispatch","requestBooks","url","axios","get","then","response","b","localeCompare","catch","connect","console","log","_state$books","bindActionCreators","setSort","_useState4","_useState6","setTitle","useRef","callOrderBy","debouncedGetBooks","debounce","_ref3","jsxStr","isEmpty","numFound","components_BookList","renderBooksList","Form","onSubmit","e","preventDefault","Group","controlId","Label","Control","onChange","value","placeholder","aria-describedby","tabIndex","Text","Button","variant","Pagination","Home","containers_Books","routes","react_router_dom","basename","process","react_router","render","location","exact","path","component","App","class","es","esm","components_Header","components_Footer","Boolean","window","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.714d7d6d.chunk.js","sourcesContent":["import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\n\n// Import your Module reducers here and combine them\nimport { books } from './screens/home/reducers'\n\nexport default (history) => combineReducers({\n  router: connectRouter(history),\n  // rest of your reducers\n  books\n});","import { REQUEST_BOOKS, RECEIVE_BOOKS } from './actionTypes'\n\nconst initalState = {\n  query: '',\n  isFetching: false,\n  data: {},\n  error: ''\n}\n\nexport const books = (state = initalState, action) => {\n  switch (action.type) {\n    case REQUEST_BOOKS:\n      return Object.assign({}, state, {\n        isFetching: true,\n        query: action.query\n      })\n    case RECEIVE_BOOKS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        data: action.status === 'success' ? action.payload : initalState.data,\n        error: action.status === 'error' ? action.payload : initalState.error\n      })\n    default:\n      return state;\n  }\n}","// Action types\n\nexport const REQUEST_BOOKS = 'REQUEST_BOOKS'\nexport const RECEIVE_BOOKS = 'RECEIVE_BOOKS'","import { createHashHistory } from 'history'\nimport { applyMiddleware, createStore } from 'redux'\nimport { routerMiddleware } from 'connected-react-router'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createRootReducer from './rootReducer'\nimport thunk from 'redux-thunk';\n// Create history\nexport const history = createHashHistory();\n\n// Define on your own as per requirment\nconst preloadedState = {};\n\nconst store = createStore(\n  createRootReducer(history), // Root reducer with router state\n  preloadedState,\n  composeWithDevTools(\n    applyMiddleware(\n      routerMiddleware(history),\n      thunk\n    ),\n  )\n)\nexport default store;\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar'\n\nconst Header = () => (\n  <header id=\"app-header\">\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Navbar.Brand href=\"#/\">Book Finder</Navbar.Brand>\n    </Navbar>\n  </header>\n)\nexport default Header;","import React from \"react\";\n\nconst Footer = () => (\n  <footer id=\"app-footer\" aria-label=\"Footer\">\n    &copy; {new Date().getFullYear()}\n  </footer>\n);\nexport default Footer;\n","import React from \"react\";\nimport Moment from \"react-moment\";\nconst BookList = ({ books }) => {\n  let { docs } = books;\n\n  return (\n    <div className=\"books-list\">\n      <table>\n        <caption className=\"sr-only\" data-testid=\"table\">\n          List of Books\n        </caption>\n        <thead>\n          <tr>\n            <th>Title </th>\n\n            <th>Author</th>\n            <th>Published Date</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            docs.map((book) => (\n              <tr key={book.key}>\n                <td>\n                  {book.cover_i ? (\n                    <img\n                      src={`https://covers.openlibrary.org/b/id/\n                            ${book.cover_i} \n                            -S.jpg`}\n                      alt=\"\"\n                      className=\"cover\"\n                    />\n                  ) : (\n                    <img\n                      src=\"https://cdn2.iconfinder.com/data/icons/symbol-gray-set-3b/100/1-40-1024.png\"\n                      width=\"40px\"\n                      alt=\"\"\n                    />\n                  )}\n                  {book.title ? book.title : \"Not informed\"}\n                </td>\n\n                <td>{book.author_name ? book.author_name : \"Not informed\"}</td>\n                <td>\n                  {book.publish_date ? (\n                    book.publish_date.length > 1 ? (\n                      <ul>\n                        {book.publish_date.map((date, i) => (\n                          <li key={i}>\n                            <Moment format=\"MMMM DD YYYY\">\n                              {new Date(date)}\n                            </Moment>\n                          </li>\n                        ))}\n                      </ul>\n                    ) : (\n                      <Moment format=\"MMMM DD YYYY\">\n                        {book.publish_date[0]}\n                      </Moment>\n                    )\n                  ) : (\n                    \"Date not informed\"\n                  )}\n                </td>\n              </tr>\n            ))\n            /* {items.map((book) => (\n              <BookList key={book.cover_i} book={book} />\n            ))} */\n          }\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default BookList;\n","import React, { useState } from \"react\";\n\nconst PaginationComponent = ({\n  totalRegister,\n  callBackCurrentPage,\n  currentpage,\n  childFunc,\n}) => {\n  React.useEffect(() => {\n    childFunc.current = updateCurrentPage;\n  }, []);\n\n  const updateCurrentPage = (props) => {\n    startPages(props.totalRegister);\n    setcurrentPage(props.page);\n  };\n\n  const [currentPage, setcurrentPage] = useState(currentpage);\n  const [itemsPerPage] = useState(10);\n  const [pageNumberLimit] = useState(5);\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(5);\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\n  //const [pages, setPages] = useState([]);\n  const handleClick = (event) => {\n    setcurrentPage(Number(event.target.id));\n    callBackCurrentPage(Number(event.target.id));\n  };\n  const startPages = (totalRegister) => {\n    let pages = [];\n    for (let i = 1; i <= Math.ceil(totalRegister / itemsPerPage); i++) {\n      pages.push(i);\n    }\n    return pages;\n  };\n  let pages = startPages(totalRegister);\n\n  const renderPageNumbers = pages.map((number) => {\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\n      return (\n        <li key={number}>\n          <button\n            aria-current={currentPage === number}\n            id={number}\n            onClick={handleClick}\n            aria-label={\"Page \" + number}\n          >\n            {number}\n          </button>\n        </li>\n      );\n    } else {\n      return null;\n    }\n  });\n\n  const handleNextbtn = () => {\n    setcurrentPage(currentPage + 1);\n\n    if (currentPage + 1 > maxPageNumberLimit) {\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\n    }\n    callBackCurrentPage(currentPage);\n  };\n\n  const handlePrevbtn = () => {\n    setcurrentPage(currentPage - 1);\n\n    if ((currentPage - 1) % pageNumberLimit === 0) {\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\n    }\n    callBackCurrentPage(currentPage);\n  };\n\n  let pageIncrementBtn = null;\n  if (pages.length > maxPageNumberLimit) {\n    pageIncrementBtn = (\n      <li>\n        <button onClick={handleNextbtn}>Next page</button>\n      </li>\n    );\n  }\n\n  let pageDecrementBtn = null;\n  if (currentPage > 1 && pages.length > 0) {\n    pageDecrementBtn = (\n      <li>\n        <button onClick={handlePrevbtn}>Previous page</button>\n      </li>\n    );\n  }\n\n  return (\n    <>\n      <div id=\"paginationControl\" role=\"navigation\" aria-label=\"Pagination\">\n        <ul className=\"pageNumbers\">\n          {pageDecrementBtn}\n          {renderPageNumbers}\n          {pageIncrementBtn}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default PaginationComponent;\n","import axios from \"axios\";\nimport { REQUEST_BOOKS, RECEIVE_BOOKS } from \"./actionTypes\";\n\nexport const requestBooks = (query) => ({\n  type: REQUEST_BOOKS,\n  query,\n});\n\nexport const receiveBooks = ({ status, payload }) => ({\n  type: RECEIVE_BOOKS,\n  status,\n  payload,\n});\n\nexport const getBooks = ({ query, sort, qtdPage, page }) => {\n  return function (dispatch) {\n    dispatch(requestBooks(query));\n\n    const url = `http://openlibrary.org/search.json?q=${query}${`&limit=10`}&page=${\n      page ? page : 1\n    }${\n      sort === \"title_desc\" || sort === \"title_asc\"\n        ? \"\"\n        : sort\n        ? `&sort=${sort}`\n        : \"\"\n    }`;\n    return axios\n      .get(url)\n      .then((response) => {\n        if (sort === \"title_asc\") {\n          response.data.docs.sort((a, b) => a.title.localeCompare(b.title));\n        } else if (sort === \"title_desc\") {\n          response.data.docs.sort((b, a) => a.title.localeCompare(b.title));\n        }\n        dispatch(\n          receiveBooks({\n            status: \"success\",\n            payload: response.data,\n          })\n        );\n      })\n      .catch((error) => {\n        dispatch(\n          receiveBooks({\n            status: \"error\",\n            payload: error,\n          })\n        );\n      });\n  };\n};\n","import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport isEmpty from \"lodash/isEmpty\";\nimport BookList from \"../components/BookList\";\nimport Pagination from \"../../../components/Pagination\";\nimport { getBooks } from \"../actions\";\nimport debounce from \"lodash/debounce\";\nconst renderBooksList = (callOrderBy, data, query, currentPage, sort) => {\n  if (isEmpty(data)) {\n    return null;\n  }\n  let { numFound } = data;\n\n  return (\n    <>\n      <p role=\"alert\" className=\"sr-only\">\n        End of loading\n      </p>\n      <h2>{`Search results for: ${query}`}</h2>\n      <p>Total results: {numFound}</p>\n      {numFound > 0 ? (\n        <>\n          <BookList\n            books={data}\n            currentpage={currentPage}\n            totalRegister={numFound}\n          ></BookList>\n        </>\n      ) : null}\n    </>\n  );\n};\n\nconst Books = ({ getBooks, data, isFetching, query, error }) => {\n  const [sort, setSort] = useState(\"\");\n  const [currentpage, setcurrentPage] = useState(1);\n  const [title, setTitle] = useState(query);\n  const childFunc = React.useRef(null);\n  const callOrderBy = ({ sort }) => {\n    setSort(sort);\n    setcurrentPage(1);\n    debouncedGetBooks({ query: title, currentPage: 1, sort: sort });\n    childFunc.current({ page: 1 });\n  };\n\n  const callBackCurrentPage = (currentPage) => {\n    setcurrentPage(currentPage);\n\n    debouncedGetBooks({ query: title, currentPage: currentPage, sort: sort });\n  };\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    setcurrentPage(1);\n\n    debouncedGetBooks({ query: title, currentPage: 1, sort: sort });\n    childFunc.current({ page: 1 });\n  };\n\n  const debouncedGetBooks = debounce(({ query, currentPage, sort }) => {\n    getBooks({ query: query, page: currentPage, sort: sort });\n  }, 700);\n\n  let jsxStr = \"\";\n\n  if (isFetching) {\n    jsxStr = (\n      <p role=\"alert\" data-testid=\"loading\">\n        Loading...\n      </p>\n    );\n  } else if (!isEmpty(error)) {\n    jsxStr = (\n      <p role=\"alert\">\n        We are having a issue with our server, please try again\n      </p>\n    );\n  } else {\n    jsxStr = renderBooksList(callOrderBy, data, query, currentpage, sort);\n  }\n  return (\n    <>\n      <div className=\"search-books\">\n        <Form className=\"search-books--form\" onSubmit={handleOnSubmit}>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Book's name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              onChange={(event) => setTitle(event.target.value)}\n              placeholder=\"Harry Potter, Food and Love\"\n              aria-describedby=\"descSearch\"\n              tabIndex=\"0\"\n              data-testid=\"search\"\n            />\n\n            <Form.Text className=\"text-muted\" id=\"descSearch\">\n              Search the world's most comprehensive index of full-text books.\n            </Form.Text>\n            <Button variant=\"validBlue\" type=\"submit\" data-testid=\"toggle\">\n              Search\n            </Button>\n          </Form.Group>\n        </Form>\n      </div>\n      <div className=\"books\">\n        {data && data.numFound > 0 ? (\n          <div>\n            <span>Order by: </span>\n            <ul className=\"pageNumbers\">\n              <li>\n                <button\n                  aria-label={`Order by most editions ${\n                    sort === \"editions\" ? \"selected\" : \"\"\n                  }`}\n                  onClick={(event) =>\n                    callOrderBy({\n                      // totalRegister: numFound,\n                      sort: \"editions\",\n                    })\n                  }\n                  aria-current={sort === \"editions\"}\n                >\n                  Most Editions\n                </button>\n              </li>\n              <li>\n                <button\n                  aria-label={`Order by first published ${\n                    sort === \"old\" ? \"selected\" : \"\"\n                  }`}\n                  onClick={(event) =>\n                    callOrderBy({\n                      //  totalRegister: numFound,\n                      sort: \"old\",\n                    })\n                  }\n                  aria-current={sort === \"old\"}\n                >\n                  First Published\n                </button>\n              </li>\n              <li>\n                <button\n                  aria-label={`Order by most recent ${\n                    sort === \"new\" ? \"selected\" : \"\"\n                  }`}\n                  onClick={(event) =>\n                    callOrderBy({\n                      //totalRegister: numFound,\n                      sort: \"new\",\n                    })\n                  }\n                  aria-current={sort === \"new\"}\n                >\n                  Most Recent\n                </button>\n              </li>\n              <li>\n                <button\n                  aria-label={`Order by random ${\n                    sort === \"random\" ? \"selected\" : \"\"\n                  }`}\n                  onClick={(event) =>\n                    callOrderBy({\n                      //totalRegister: numFound,\n                      sort: \"random\",\n                    })\n                  }\n                  aria-current={sort === \"random\"}\n                >\n                  Random\n                </button>\n              </li>\n              <li>\n                <button\n                  aria-label={`Order by title ${\n                    sort === \"title_asc\" ? \"selected\" : \"\"\n                  }`}\n                  onClick={(event) =>\n                    callOrderBy({\n                      // totalRegister: numFound,\n                      sort: \"title_asc\",\n                    })\n                  }\n                  aria-current={sort === \"title_asc\"}\n                >\n                  Title\n                </button>\n              </li>\n            </ul>\n          </div>\n        ) : (\n          \"\"\n        )}\n\n        {jsxStr}\n\n        <Pagination\n          totalRegister={data ? data.numFound : 0}\n          currentpage={currentpage}\n          callBackCurrentPage={callBackCurrentPage}\n          childFunc={childFunc}\n        ></Pagination>\n      </div>\n    </>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      getBooks,\n    },\n    dispatch\n  );\n};\n\nconst mapStateToProps = (state) => {\n  console.log(\"mapStateToProps:\", state);\n\n  let { data, isFetching, query, error } = state.books;\n  return {\n    data,\n    isFetching,\n    query,\n    error,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Books);\n","import React from \"react\";\nimport Books from \"./containers/Books\";\nimport \"./home.scss\";\nconst Home = () => {\n  return (\n    <div id=\"home\" className=\"page\">\n      <div className=\"container\">\n        <h1>Welcome to my store</h1>\n        <Books />\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\n// Configure routes\nimport Home from \"./screens/home\";\n\nexport default (\n  <>\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <Route\n        render={({ location }) => (\n          <Switch location={location}>\n            <Route exact path=\"/\" component={Home} />\n          </Switch>\n        )}\n      />\n    </HashRouter>\n  </>\n);\n","import React from \"react\";\n\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport store, { history } from \"./configureStore\";\n\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\nimport routes from \"./routes\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <>\n      <a class=\"skip-main\" href=\"#main\">\n        Skip to main content\n      </a>\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <div className=\"app\">\n            <Header />\n            <main id=\"main\">{routes}</main>\n          </div>\n          <Footer />\n        </ConnectedRouter>\n      </Provider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}