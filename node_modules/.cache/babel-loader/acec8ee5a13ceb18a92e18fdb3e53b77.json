{"ast":null,"code":"var _jsxFileName = \"/Users/robertohori/Sites/bookfinder-app/src/screens/home/containers/Books.js\";\nimport React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport isEmpty from \"lodash/isEmpty\";\nimport BookList from \"../components/BookList\";\nimport Pagination from \"../../../components/Pagination\";\nimport { getBooks } from \"../actions\";\nimport debounce from \"lodash/debounce\";\n\nconst renderBooksList = (callOrderBy, data, query, currentPage, sort) => {\n  if (isEmpty(data)) {\n    return null;\n  }\n\n  let {\n    numFound\n  } = data;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    role: \"alert\",\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"End of loading\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, `Search results for: ${query}`), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"Total results: \", numFound), numFound > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BookList, {\n    books: data,\n    currentpage: currentPage,\n    totalRegister: numFound,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  })) : null);\n};\n\nconst Books = ({\n  getBooks,\n  data,\n  isFetching,\n  query,\n  error\n}) => {\n  const [sort, setSort] = useState(\"\");\n  const [currentpage, setcurrentPage] = useState(1);\n  const [title, setTitle] = useState(query);\n  const childFunc = React.useRef(null);\n\n  const callOrderBy = ({\n    sort\n  }) => {\n    setSort(sort);\n    setcurrentPage(1);\n    debouncedGetBooks({\n      query: title,\n      currentPage: 1,\n      sort: sort\n    });\n    childFunc.current({\n      page: 1\n    });\n  };\n\n  const callBackCurrentPage = currentPage => {\n    setcurrentPage(currentPage);\n    debouncedGetBooks({\n      query: title,\n      currentPage: currentPage,\n      sort: sort\n    });\n  };\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    setcurrentPage(1);\n    debouncedGetBooks({\n      query: title,\n      currentPage: 1,\n      sort: sort\n    });\n    childFunc.current({\n      page: 1\n    });\n  };\n\n  const debouncedGetBooks = debounce(({\n    query,\n    currentPage,\n    sort\n  }) => {\n    getBooks({\n      query: query,\n      page: currentPage,\n      sort: sort\n    });\n  }, 700);\n  let jsxStr = \"\";\n\n  if (isFetching) {\n    jsxStr = /*#__PURE__*/React.createElement(\"p\", {\n      role: \"alert\",\n      \"data-testid\": \"loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, \"Loading...\");\n  } else if (!isEmpty(error)) {\n    jsxStr = /*#__PURE__*/React.createElement(\"p\", {\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, \"We are having a issue with our server, please try again\");\n  } else {\n    jsxStr = renderBooksList(callOrderBy, data, query, currentpage, sort);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-books\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"search-books--form\",\n    onSubmit: handleOnSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Book's name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    onChange: event => setTitle(event.target.value),\n    placeholder: \"Harry Potter, Food and Love\",\n    \"aria-describedby\": \"descSearch\",\n    tabIndex: \"0\",\n    \"data-testid\": \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Text, {\n    className: \"text-muted\",\n    id: \"descSearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Search the world's most comprehensive index of full-text books.\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"validBlue\",\n    type: \"submit\",\n    \"data-testid\": \"toggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"Search\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"books\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, data && data.numFound > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Order by: \"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"pageNumbers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    \"aria-label\": `Order by most editions ${sort === \"editions\" ? \"selected\" : \"\"}`,\n    onClick: event => callOrderBy({\n      // totalRegister: numFound,\n      sort: \"editions\"\n    }),\n    \"aria-current\": sort === \"editions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, \"Most Editions\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    \"aria-label\": `Order by first published ${sort === \"old\" ? \"selected\" : \"\"}`,\n    onClick: event => callOrderBy({\n      //  totalRegister: numFound,\n      sort: \"old\"\n    }),\n    \"aria-current\": sort === \"old\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, \"First Published\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    \"aria-label\": `Order by most recent ${sort === \"new\" ? \"selected\" : \"\"}`,\n    onClick: event => callOrderBy({\n      //totalRegister: numFound,\n      sort: \"new\"\n    }),\n    \"aria-current\": sort === \"new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, \"Most Recent\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    \"aria-label\": `Order by random ${sort === \"random\" ? \"selected\" : \"\"}`,\n    onClick: event => callOrderBy({\n      //totalRegister: numFound,\n      sort: \"random\"\n    }),\n    \"aria-current\": sort === \"random\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, \"Random\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    \"aria-label\": `Order by title ${sort === \"title_asc\" ? \"selected\" : \"\"}`,\n    onClick: event => callOrderBy({\n      // totalRegister: numFound,\n      sort: \"title_asc\"\n    }),\n    \"aria-current\": sort === \"title_asc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, \"Title\")))) : \"\", jsxStr, /*#__PURE__*/React.createElement(Pagination, {\n    totalRegister: data ? data.numFound : 0,\n    currentpage: currentpage,\n    callBackCurrentPage: callBackCurrentPage,\n    childFunc: childFunc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getBooks\n  }, dispatch);\n};\n\nconst mapStateToProps = state => {\n  console.log(\"mapStateToProps:\", state);\n  let {\n    data,\n    isFetching,\n    query,\n    error\n  } = state.books;\n  return {\n    data,\n    isFetching,\n    query,\n    error\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Books);","map":{"version":3,"sources":["/Users/robertohori/Sites/bookfinder-app/src/screens/home/containers/Books.js"],"names":["React","useState","Form","Button","connect","bindActionCreators","isEmpty","BookList","Pagination","getBooks","debounce","renderBooksList","callOrderBy","data","query","currentPage","sort","numFound","Books","isFetching","error","setSort","currentpage","setcurrentPage","title","setTitle","childFunc","useRef","debouncedGetBooks","current","page","callBackCurrentPage","handleOnSubmit","e","preventDefault","jsxStr","event","target","value","mapDispatchToProps","dispatch","mapStateToProps","state","console","log","books"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport isEmpty from \"lodash/isEmpty\";\nimport BookList from \"../components/BookList\";\nimport Pagination from \"../../../components/Pagination\";\nimport { getBooks } from \"../actions\";\nimport debounce from \"lodash/debounce\";\nconst renderBooksList = (callOrderBy, data, query, currentPage, sort) => {\n  if (isEmpty(data)) {\n    return null;\n  }\n  let { numFound } = data;\n\n  return (\n    <>\n      <p role=\"alert\" className=\"sr-only\">\n        End of loading\n      </p>\n      <h2>{`Search results for: ${query}`}</h2>\n      <p>Total results: {numFound}</p>\n      {numFound > 0 ? (\n        <>\n          <BookList\n            books={data}\n            currentpage={currentPage}\n            totalRegister={numFound}\n          ></BookList>\n        </>\n      ) : null}\n    </>\n  );\n};\n\nconst Books = ({ getBooks, data, isFetching, query, error }) => {\n  const [sort, setSort] = useState(\"\");\n  const [currentpage, setcurrentPage] = useState(1);\n  const [title, setTitle] = useState(query);\n  const childFunc = React.useRef(null);\n  const callOrderBy = ({ sort }) => {\n    setSort(sort);\n    setcurrentPage(1);\n    debouncedGetBooks({ query: title, currentPage: 1, sort: sort });\n    childFunc.current({ page: 1 });\n  };\n\n  const callBackCurrentPage = (currentPage) => {\n    setcurrentPage(currentPage);\n\n    debouncedGetBooks({ query: title, currentPage: currentPage, sort: sort });\n  };\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    setcurrentPage(1);\n\n    debouncedGetBooks({ query: title, currentPage: 1, sort: sort });\n    childFunc.current({ page: 1 });\n  };\n\n  const debouncedGetBooks = debounce(({ query, currentPage, sort }) => {\n    getBooks({ query: query, page: currentPage, sort: sort });\n  }, 700);\n\n  let jsxStr = \"\";\n\n  if (isFetching) {\n    jsxStr = (\n      <p role=\"alert\" data-testid=\"loading\">\n        Loading...\n      </p>\n    );\n  } else if (!isEmpty(error)) {\n    jsxStr = (\n      <p role=\"alert\">\n        We are having a issue with our server, please try again\n      </p>\n    );\n  } else {\n    jsxStr = renderBooksList(callOrderBy, data, query, currentpage, sort);\n  }\n  return (\n    <>\n      <div className=\"search-books\">\n        <Form className=\"search-books--form\" onSubmit={handleOnSubmit}>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Book's name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              onChange={(event) => setTitle(event.target.value)}\n              placeholder=\"Harry Potter, Food and Love\"\n              aria-describedby=\"descSearch\"\n              tabIndex=\"0\"\n              data-testid=\"search\"\n            />\n\n            <Form.Text className=\"text-muted\" id=\"descSearch\">\n              Search the world's most comprehensive index of full-text books.\n            </Form.Text>\n            <Button variant=\"validBlue\" type=\"submit\" data-testid=\"toggle\">\n              Search\n            </Button>\n          </Form.Group>\n        </Form>\n      </div>\n      <div className=\"books\">\n        {data && data.numFound > 0 ? (\n          <div>\n            <span>Order by: </span>\n            <ul className=\"pageNumbers\">\n              <li>\n                <button\n                  aria-label={`Order by most editions ${\n                    sort === \"editions\" ? \"selected\" : \"\"\n                  }`}\n                  onClick={(event) =>\n                    callOrderBy({\n                      // totalRegister: numFound,\n                      sort: \"editions\",\n                    })\n                  }\n                  aria-current={sort === \"editions\"}\n                >\n                  Most Editions\n                </button>\n              </li>\n              <li>\n                <button\n                  aria-label={`Order by first published ${\n                    sort === \"old\" ? \"selected\" : \"\"\n                  }`}\n                  onClick={(event) =>\n                    callOrderBy({\n                      //  totalRegister: numFound,\n                      sort: \"old\",\n                    })\n                  }\n                  aria-current={sort === \"old\"}\n                >\n                  First Published\n                </button>\n              </li>\n              <li>\n                <button\n                  aria-label={`Order by most recent ${\n                    sort === \"new\" ? \"selected\" : \"\"\n                  }`}\n                  onClick={(event) =>\n                    callOrderBy({\n                      //totalRegister: numFound,\n                      sort: \"new\",\n                    })\n                  }\n                  aria-current={sort === \"new\"}\n                >\n                  Most Recent\n                </button>\n              </li>\n              <li>\n                <button\n                  aria-label={`Order by random ${\n                    sort === \"random\" ? \"selected\" : \"\"\n                  }`}\n                  onClick={(event) =>\n                    callOrderBy({\n                      //totalRegister: numFound,\n                      sort: \"random\",\n                    })\n                  }\n                  aria-current={sort === \"random\"}\n                >\n                  Random\n                </button>\n              </li>\n              <li>\n                <button\n                  aria-label={`Order by title ${\n                    sort === \"title_asc\" ? \"selected\" : \"\"\n                  }`}\n                  onClick={(event) =>\n                    callOrderBy({\n                      // totalRegister: numFound,\n                      sort: \"title_asc\",\n                    })\n                  }\n                  aria-current={sort === \"title_asc\"}\n                >\n                  Title\n                </button>\n              </li>\n            </ul>\n          </div>\n        ) : (\n          \"\"\n        )}\n\n        {jsxStr}\n\n        <Pagination\n          totalRegister={data ? data.numFound : 0}\n          currentpage={currentpage}\n          callBackCurrentPage={callBackCurrentPage}\n          childFunc={childFunc}\n        ></Pagination>\n      </div>\n    </>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      getBooks,\n    },\n    dispatch\n  );\n};\n\nconst mapStateToProps = (state) => {\n  console.log(\"mapStateToProps:\", state);\n\n  let { data, isFetching, query, error } = state.books;\n  return {\n    data,\n    isFetching,\n    query,\n    error,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Books);\n"]},"metadata":{},"sourceType":"module"}